<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/schema/mybatis-3-mapper.dtd">

<mapper namespace="com.matjongchan.app.dao.restaurantMapper">

    <select id="count" resultType="int">
        SELECT count(*) FROM restaurant
    </select>

    <select id="selectByName" parameterType="string" resultType="RestaurantDto">
        SELECT * FROM restaurant WHERE name = #{name}
    </select>

    <select id="selectById" parameterType="int" resultType="RestaurantDto">
        SELECT * FROM restaurant WHERE id = #{id}
    </select>

<!--    <select id="getDetailById" parameterType="int" resultType="RestaurantDetail">-->
<!--        SELECT *-->
<!--        FROM restaurant as r-->
<!--        WHERE id = #{id}-->
<!--    </select>-->

<!--  인기도 순 조회  -->
    <select id="getPopularRestaurant" parameterType="SearchCondition" resultType="RestaurantDto">
        SELECT *
        FROM restaurant
        ORDER BY total_score_count DESC
        LIMIT 1, #{page_size)
    </select>

    <!--  주어진 검색조건으로 검색  -->
    <select id="totalSearch" parameterType="SearchCondition" resultType="RestaurantDto">
        SELECT * FROM restaurant as r
        WHERE true
        <if test="c_address != null">
            and r.c_address = #{c_address}
        </if>
        <if test="category != null">
            and r.fk_category = #{category_num}
        </if>
        order by
        <choose>
            <when test='option == "R"'>
                r.total_review_count desc
            </when>
            <otherwise>
                r.total_score_count desc
            </otherwise>
        </choose>
        limit #{offset} , #{page_size}
    </select>

    <!--  현재 지도가운데에 가까운 식당 조회  -->
    <select id="nearSearch" parameterType="SearchCondition" resultType="RestaurantDto">
        SELECT * FROM restaurant as r
        WHERE true
        <if test="c_address != null">
            and r.c_address = #{c_address}
        </if>
        <if test="category != null">
            and r.fk_category = #{category_num}
        </if>
        and r.loc_x > #{loc_se_x}
        and r.loc_y > #{loc_se_y}
        and #{loc_nw_x} > r.loc_x
        and #{loc_nw_y} > r.loc_y
        order by
        <choose>
            <when test='option == "R"'>
                r.total_review_count desc
            </when>
            <otherwise>
                r.total_score_count desc
            </otherwise>
        </choose>
        limit #{offset} , #{page_size}
    </select>

    <!--  검색창을 이용한 통합검색  -->
    <select id="realTotalSearch" parameterType="SearchCondition" resultType="RestaurantDto">
        SELECT * FROM restaurant as r
            WHERE r.search_tag LIKE concat('%',#{keyword},'%')
                ORDER BY r.total_score_count DESC
                limit #{offset} , #{page_size}
    </select>

    <delete id="truncateAll">
        truncate table restaurant;
    </delete>

    <insert id="insertRestaurant" parameterType="RestaurantDto">
        INSERT INTO restaurant
            values(null, #{name}, #{c_address}, #{d_address}, #{number}, #{reservation}, #{memo}, #{total_score_count},
                    #{total_review_count}, #{loc_x}, #{loc_y}, #{search_tag}, #{fk_category})
    </insert>

    <!--  식당 정보 수정  -->
    <update id="updateRestaurant" parameterType="RestaurantDto">
        UPDATE restaurant as r set
            r.name = #{name},
            r.c_address = #{c_address},
            r.d_address = #{d_address},
            r.number = #{number},
            r.reservation = #{reservation},
            r.memo = #{memo},
            r.total_score_count = #{total_score_count},
            r.total_review_count = #{total_review_count},
            r.loc_x = #{loc_x},
            r.loc_y = #{loc_y},
            r.search_tag = #{search_tag},
            r.fk_category = #{fk_category}
        WHERE r.id = #{id}
    </update>

    <!--  리뷰작성시 total_score_count 와 total_review_count 갱신  -->
    <update id="updateTotalCount" parameterType="TotalCount">
        UPDATE restaurant as r set
            r.total_score_count = #{total_score_count},
            r.total_review_count = #{total_review_count}
        WHERE r.id = #{restaurant_id}
    </update>

    <!--  식당 총 평균 점수, 식당 총 후기 개수  -->
    <select id="getTotalCount" parameterType="TotalCount" resultType="TotalCount">
        SELECT r.id AS restaurant_id, COUNT(rv.id) AS total_review_count, AVG(rv.total_score) AS total_score_count
            FROM restaurant AS r
                LEFT JOIN review AS rv
                ON rv.fk_restaurant_id = #{restaurant_id}
                    WHERE r.id = rv.fk_restaurant_id
                        GROUP BY r.id;
    </select>

    <!--  식당 운영시간 조회   -->
    <select id="getBusinessHours" parameterType="int" resultType="BusinessHoursDto">
        SELECT *
        FROM business_hours as bh
        WHERE bh.fk_restaurant_id = #{id}
    </select>

    <delete id="deleteRestaurant" parameterType="int">
        DELETE FROM restaurant as r WHERE r.id = #{id}
    </delete>

    <select id="getRestaurantAll" resultType="RestaurantDto">
        SELECT * FROM restaurant;
    </select>

    <select id="getRestaurantMenuDetail" parameterType="int" resultType="MenuDetail">
        SELECT  m.name as menu_name,
                m.price as menu_price,
                m.memo as menu_memo,
                r.id as restaurant_id,
                m.fk_image_id as menu_img_url
        FROM restaurant as r
            INNER JOIN menu as m
            ON m.fk_restaurant_id = r.id
        WHERE r.id = #{id}
    </select>

    <select id="getRestaurantMenuImage" parameterType="int" resultType="String">
        SELECT oi.img_url as img_url
        FROM menu as m
            INNER JOIN other_image as oi
            ON m.fk_image_id = oi.id
        WHERE oi.id = #{id}
    </select>

    <select id="getRelationRestaurant" parameterType="int" resultType="RestaurantDto">
        SELECT *
        FROM Restaurant as r
        WHERE r.fk_category = #{id}
        LIMIT 1, 3
    </select>

</mapper>


